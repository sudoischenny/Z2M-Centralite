{
  "nodes": [
    {
      "parameters": {
        "content": "## Update on MQTT Response",
        "height": 80
      },
      "name": "Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -660,
        -660
      ]
    },
    {
      "parameters": {
        "topics": "zigbee2mqtt/thermostat",
        "options": {}
      },
      "name": "MQTT Listen For Thermostat Event",
      "type": "n8n-nodes-base.mqttTrigger",
      "typeVersion": 1,
      "position": [
        -380,
        -680
      ],
      "credentials": {
        "mqtt": {
          "id": "3",
          "name": "z2m"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "let rawJSON = JSON.parse($json[\"message\"]);\n\nlet fmtObj = {};\n\nlet HVACkey = \"\";\n\nlet targetTemp = \"\";\n\nlet currentStatus = \"\";\n\n//swtich statement for identifing HVAC key 0,1,2 : off, heat, cool\n\nswitch (rawJSON[\"system_mode\"]) {\n  case 'off':\n      HVACkey = 0;\n  break;\n  case 'heat':\n      HVACkey = 1;\n  break;\n    case 'cool':\n      HVACkey = 2;\n  break;\n  default:\n      HVACkey = 0;\n}\n//end of HVAC key switch statement\n\n//change target temp based off hvac mode;\nif (HVACkey == '1'){\ntargetTemp = rawJSON[\"occupied_heating_setpoint\"];\n}\nelse {\ntargetTemp = rawJSON[\"occupied_cooling_setpoint\"]\n}\n\n//change current status\nif (HVACkey == 0){currentStatus = 0;}\nelse if (rawJSON[\"running_state\"] == 'idle'){ currentStatus = 0;}\nelse{\n currentStatus = HVACkey;\n}\n\n\nfmtObj[\"targetHeatingCoolingState\"] = HVACkey;\n\nfmtObj[\"targetTemperature\"] = targetTemp;\n\nfmtObj[\"currentHeatingCoolingState\"] = currentStatus;\n\nfmtObj[\"currentTemperature\"] = rawJSON[\"local_temperature\"];\n\n\nreturn fmtObj;"
      },
      "name": "Format JSON to Web Thermostat",
      "type": "n8n-nodes-base.functionItem",
      "typeVersion": 1,
      "position": [
        -80,
        -680
      ]
    },
    {
      "parameters": {
        "mode": "jsonToBinary",
        "options": {}
      },
      "name": "Change JSON to File",
      "type": "n8n-nodes-base.moveBinaryData",
      "typeVersion": 1,
      "position": [
        220,
        -680
      ]
    },
    {
      "parameters": {
        "fileName": "/data/thermostat.json"
      },
      "name": "Write File to Disk",
      "type": "n8n-nodes-base.writeBinaryFile",
      "typeVersion": 1,
      "position": [
        500,
        -680
      ]
    }
  ]
}
