{
  "name": "Thermostat",
  "nodes": [
    {
      "parameters": {
        "content": "## Check Thermostat Status",
        "height": 93.07467811158799
      },
      "id": "7c76e00d-9d32-46d1-ada4-7e2dfa08d8a6",
      "name": "Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -500,
        -60
      ]
    },
    {
      "parameters": {
        "content": "# Set\n\nMQTT /set Thermostat",
        "height": 117.12508537184905
      },
      "id": "6669fa88-4ccb-440e-91aa-a175aee68ec0",
      "name": "Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -500,
        280
      ]
    },
    {
      "parameters": {
        "content": "## Update on MQTT Response",
        "height": 80
      },
      "id": "85d4bb4a-9f2a-409d-bb2f-3a4c8c933cee",
      "name": "Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -660,
        -660
      ]
    },
    {
      "parameters": {
        "url": "http://172.17.0.1:2000/targetHeatingCoolingState",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "value",
              "value": "={{ $json[\"targetHeatingCoolingState\"] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "d0e388b1-b46e-4d9f-8b2f-bed6c96febe7",
      "name": "Listener Target state",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        260,
        -1140
      ]
    },
    {
      "parameters": {
        "url": "http://172.17.0.1:2000/targetTemperature",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "value",
              "value": "={{ $json[\"targetTemperature\"] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "fe7a6de3-6624-4aa2-b8bd-60a6266a4816",
      "name": "listener target temp",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        260,
        -960
      ]
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json[\"targetHeatingCoolingState\"] }}",
              "operation": "equal",
              "value2": 1
            }
          ]
        }
      },
      "id": "1aed85b3-bdb3-4c48-9740-56a39a19d38c",
      "name": "IF heat or cool",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        300,
        1100
      ]
    },
    {
      "parameters": {
        "topics": "zigbee2mqtt/thermostat",
        "options": {}
      },
      "id": "b8a8ce5c-1a51-4637-8797-f6ebe8aa59e8",
      "name": "MQTT Listen For Thermostat Event",
      "type": "n8n-nodes-base.mqttTrigger",
      "typeVersion": 1,
      "position": [
        -380,
        -680
      ],
      "credentials": {
        "mqtt": {
          "id": "3",
          "name": "z2m"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "let rawJSON = JSON.parse($json[\"message\"]);\n\nlet fmtObj = {};\n\nlet HVACkey = \"\";\n\nlet targetTemp = \"\";\n\nlet currentStatus = \"\";\n\n//swtich statement for identifing HVAC key 0,1,2 : off, heat, cool\n\nswitch (rawJSON[\"system_mode\"]) {\n  case 'off':\n      HVACkey = 0;\n  break;\n  case 'heat':\n      HVACkey = 1;\n  break;\n    case 'cool':\n      HVACkey = 2;\n  break;\n  default:\n      HVACkey = 0;\n}\n//end of HVAC key switch statement\n\n//change target temp based off hvac mode;\nif (HVACkey == '1'){\ntargetTemp = rawJSON[\"occupied_heating_setpoint\"];\n}\nelse {\ntargetTemp = rawJSON[\"occupied_cooling_setpoint\"]\n}\n\n//change current status\nif (HVACkey == 0){currentStatus = 0;}\nelse if (rawJSON[\"running_state\"] == 'idle'){ currentStatus = 0;}\nelse{\n currentStatus = HVACkey;\n}\n\n\nfmtObj[\"targetHeatingCoolingState\"] = HVACkey;\n\nfmtObj[\"targetTemperature\"] = targetTemp;\n\nfmtObj[\"currentHeatingCoolingState\"] = currentStatus;\n\nfmtObj[\"currentTemperature\"] = rawJSON[\"local_temperature\"];\n\n\nreturn fmtObj;"
      },
      "id": "a06d92ab-f393-4c52-9722-dd72cc0584e0",
      "name": "Format JSON to Web Thermostat",
      "type": "n8n-nodes-base.functionItem",
      "typeVersion": 1,
      "position": [
        -80,
        -680
      ]
    },
    {
      "parameters": {
        "mode": "jsonToBinary",
        "options": {}
      },
      "id": "1cfc8b16-9014-4bbc-9c90-bb2794b06a07",
      "name": "Change JSON to File",
      "type": "n8n-nodes-base.moveBinaryData",
      "typeVersion": 1,
      "position": [
        220,
        -680
      ]
    },
    {
      "parameters": {
        "fileName": "/data/thermostat.json"
      },
      "id": "fd172ec0-440e-4e47-b855-827656f4171e",
      "name": "Write File to Disk",
      "type": "n8n-nodes-base.writeBinaryFile",
      "typeVersion": 1,
      "position": [
        500,
        -680
      ]
    },
    {
      "parameters": {
        "path": "status",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "f471bb5c-c18b-467c-95de-83c39d05f71b",
      "name": "Web Thermostat Status Request",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -160,
        -80
      ],
      "webhookId": "6cadf6ef-950f-4cf1-9564-85f357a9f2ed"
    },
    {
      "parameters": {
        "filePath": "/data/thermostat.json"
      },
      "id": "b867335d-94d9-41da-8035-3c0825ac41e2",
      "name": "Read JSON on Disk",
      "type": "n8n-nodes-base.readBinaryFile",
      "typeVersion": 1,
      "position": [
        240,
        -80
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "493a19dd-7443-4fef-b59e-2f346e071cb3",
      "name": "Change File to JSON",
      "type": "n8n-nodes-base.moveBinaryData",
      "typeVersion": 1,
      "position": [
        480,
        -80
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\"targetHeatingCoolingState\":{{ $json[\"targetHeatingCoolingState\"] }},\"targetTemperature\":{{ $json[\"targetTemperature\"] }},\"currentHeatingCoolingState\":{{ $json[\"currentHeatingCoolingState\"] }},\"currentTemperature\":{{ $json[\"currentTemperature\"] }}}",
        "options": {}
      },
      "id": "601b7de1-c2c5-4898-a51a-61540415774d",
      "name": "Respond to Status Endpoint",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        700,
        -80
      ]
    },
    {
      "parameters": {},
      "id": "6c519d86-510d-4968-9ab2-50bbf45092b4",
      "name": "Start - Debug",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [
        -960,
        -420
      ]
    },
    {
      "parameters": {
        "path": "targetHeatingCoolingState",
        "options": {}
      },
      "id": "583ef7e3-e04c-4a59-95b9-7bbdd9896d09",
      "name": "Endpoint - Set Heat/Cool State",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -160,
        440
      ],
      "webhookId": "bd287989-1466-4483-af49-45dba1171d9b"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$node[\"Endpoint - Set Heat/Cool State\"].json[\"query\"][\"value\"]}}",
              "value2": "1"
            }
          ]
        }
      },
      "id": "6fca2c10-5bbd-47ff-b641-1d79aadb95a9",
      "name": "IF Heat",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        140,
        320
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$node[\"Endpoint - Set Heat/Cool State\"].json[\"query\"][\"value\"]}}",
              "value2": "2"
            }
          ]
        }
      },
      "id": "feea5a8d-ede5-46bf-aeef-d83eddcabd22",
      "name": "IF Cool/AC",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        140,
        540
      ]
    },
    {
      "parameters": {
        "topic": "zigbee2mqtt/0x000d6f000a93f840/set",
        "sendInputData": false,
        "message": "{ \"system_mode\": \"off\" }",
        "options": {}
      },
      "id": "4aab171c-e9ef-4f1e-be6b-88934341863c",
      "name": "Set Thermostat State Off",
      "type": "n8n-nodes-base.mqtt",
      "typeVersion": 1,
      "position": [
        620,
        280
      ],
      "credentials": {
        "mqtt": {
          "id": "3",
          "name": "z2m"
        }
      }
    },
    {
      "parameters": {
        "topic": "zigbee2mqtt/0x000d6f000a93f840/set",
        "sendInputData": false,
        "message": "{ \"system_mode\": \"heat\" }",
        "options": {}
      },
      "id": "672dab1c-92d2-4c6f-90b3-d24c8ece3153",
      "name": "Set Thermostat State Heat",
      "type": "n8n-nodes-base.mqtt",
      "typeVersion": 1,
      "position": [
        620,
        440
      ],
      "credentials": {
        "mqtt": {
          "id": "3",
          "name": "z2m"
        }
      }
    },
    {
      "parameters": {
        "topic": "zigbee2mqtt/0x000d6f000a93f840/set",
        "sendInputData": false,
        "message": "{ \"system_mode\": \"cool\" }",
        "options": {}
      },
      "id": "925dd991-fc62-4ea1-92be-a1a8808a1f90",
      "name": "Set Thermostat State Cool/AC",
      "type": "n8n-nodes-base.mqtt",
      "typeVersion": 1,
      "position": [
        620,
        600
      ],
      "credentials": {
        "mqtt": {
          "id": "3",
          "name": "z2m"
        }
      }
    },
    {
      "parameters": {
        "path": "targetTemperature",
        "options": {}
      },
      "id": "ba057657-7ecb-4865-a4ca-b14cfc15b781",
      "name": "Endpoint - Set Target Temp",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -360,
        1100
      ],
      "webhookId": "5b347ae3-fe76-4f12-805e-764b5169de6c"
    },
    {
      "parameters": {
        "filePath": "/data/thermostat.json"
      },
      "id": "68b8f5a7-cc30-4e5a-a842-45167f8c55f7",
      "name": "Read JSON File",
      "type": "n8n-nodes-base.readBinaryFile",
      "typeVersion": 1,
      "position": [
        -140,
        1100
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "afd89cd2-1d72-4488-a952-4d19d7ff75cf",
      "name": "Change File to JSON1",
      "type": "n8n-nodes-base.moveBinaryData",
      "typeVersion": 1,
      "position": [
        80,
        1100
      ]
    },
    {
      "parameters": {
        "topic": "zigbee2mqtt/0x000d6f000a93f840/set",
        "sendInputData": false,
        "message": "={ \"occupied_heating_setpoint\":  {{$node[\"Endpoint - Set Target Temp\"].json[\"query\"][\"value\"]}}}",
        "options": {}
      },
      "id": "328ceb92-567d-4a3e-afa0-fc465374f355",
      "name": "Set Thermostat Heat Temp",
      "type": "n8n-nodes-base.mqtt",
      "typeVersion": 1,
      "position": [
        580,
        1020
      ],
      "credentials": {
        "mqtt": {
          "id": "3",
          "name": "z2m"
        }
      }
    },
    {
      "parameters": {
        "topic": "zigbee2mqtt/0x000d6f000a93f840/set",
        "sendInputData": false,
        "message": "={ \"occupied_cooling_setpoint\":  {{$node[\"Endpoint - Set Target Temp\"].json[\"query\"][\"value\"]}}}",
        "options": {}
      },
      "id": "b7c4922c-fa7c-4d86-a315-1a87af63e380",
      "name": "Set Thermostat Cooling/AC Temp",
      "type": "n8n-nodes-base.mqtt",
      "typeVersion": 1,
      "position": [
        580,
        1200
      ],
      "credentials": {
        "mqtt": {
          "id": "3",
          "name": "z2m"
        }
      }
    },
    {
      "parameters": {
        "content": "### Alternatively await for MQTT thermostat response",
        "height": 80,
        "width": 317.1406008583691
      },
      "id": "dedafa5c-acce-4a5d-aba1-697267f6ecb6",
      "name": "Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        60,
        1300
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "IF heat or cool": {
      "main": [
        [
          {
            "node": "Set Thermostat Heat Temp",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Thermostat Cooling/AC Temp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MQTT Listen For Thermostat Event": {
      "main": [
        [
          {
            "node": "Format JSON to Web Thermostat",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format JSON to Web Thermostat": {
      "main": [
        [
          {
            "node": "Change JSON to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Change JSON to File": {
      "main": [
        [
          {
            "node": "Write File to Disk",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Web Thermostat Status Request": {
      "main": [
        [
          {
            "node": "Read JSON on Disk",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read JSON on Disk": {
      "main": [
        [
          {
            "node": "Change File to JSON",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Change File to JSON": {
      "main": [
        [
          {
            "node": "Respond to Status Endpoint",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Endpoint - Set Heat/Cool State": {
      "main": [
        [
          {
            "node": "IF Heat",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF Heat": {
      "main": [
        [
          {
            "node": "Set Thermostat State Heat",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "IF Cool/AC",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF Cool/AC": {
      "main": [
        [
          {
            "node": "Set Thermostat State Cool/AC",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Thermostat State Off",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Endpoint - Set Target Temp": {
      "main": [
        [
          {
            "node": "Read JSON File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read JSON File": {
      "main": [
        [
          {
            "node": "Change File to JSON1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Change File to JSON1": {
      "main": [
        [
          {
            "node": "IF heat or cool",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {},
  "id": 4,
  "meta": {
    "instanceId": "0d5f02b48848f589392c6dec19e83cbc62270b7bbb89c7b8b40ac5fc7f3e771d"
  },
  "tags": []
}
